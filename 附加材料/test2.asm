main:
    addi $2, $0, 0      # $2 = a[i]，初始化为0
    addi $3, $0, 1      # $3 = b[i]，初始化为1
    addi $4, $0, 0      # $4 = c[i]
    addi $5, $0, 4      # $5 = 计数器，每次+4
    addi $6, $0, 0      # $6 = a[i-1]，初始化为0
    addi $7, $0, 1      # $7 = b[i-1]，初始化为1
    addi $10, $0, 0     # $10 = 条件判断标志位
    addi $11, $0, 240   # $11 = 总长度
    addi $14, $0, 3     # $14 = 常数3
    addi $15, $0, 0     # $15 = 临时c[i]
    addi $16, $0, 0     # $16 = 临时d[i]
    addi $28, $0, 0     # $28 = 最终结果

loop:
    # 计算a[i]
    srl $12, $5, 2       # $12 = $5 >> 2，计算当前索引i
    add $6, $6, $12      # $6 = a[i] = a[i-1] + i

    # 计算b[i]
    mul $13, $14, $12    # $13 = 3 * i
    add $7, $7, $13      # $7 = b[i] = b[i-1] + 3 * i

    # 分段逻辑
    slti $10, $5, 80   # 判断 $5 < 80，结果存储在 $10 中
    beq  $10, $0, c1   # 如果 $10 == 0，说明 $5 >= 80，跳转到 c1

    # 第一段：直接记录当前a[i]和b[i]
    add $15, $6, $0      # $15 = c[i] = a[i]
    add $16, $7, $0      # $16 = d[i] = b[i]
    j endc

c1:
    slti $10, $5, 160    # 判断 $5 < 160
    beq $10, $0, c2

    # 第二段：加法和乘法计算
    add $15, $6, $7      # $15 = c[i] = a[i] + b[i]
    mul $16, $15, $6     # $16 = d[i] = c[i] * a[i]
    j endc

c2:
    # 第三段：乘法计算
    mul $15, $6, $7      # $15 = c[i] = a[i] * b[i]
    mul $16, $15, $7     # $16 = d[i] = c[i] * b[i]

endc:
    # 更新计数器
    addiu $5, $5, 4      # $5 = $5 + 4
    slti $10, $5, 240   # 判断 $5 >= 240，结果存储在 $10 中
    bne  $10, $0, loop    # 如果 $10 == 0，说明 $5 < 240，跳转到 c1

end:
    j end                # 无限循环

